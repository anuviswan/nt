openapi: 3.0.1
info:
  title: Nt.Infrastructure.WebApi
  version: '1.0'
paths:
  /api/Movie/CreateMovie:
    post:
      tags:
        - Movie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMovieRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateMovieRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateMovieRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateMovieResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMovieResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateMovieResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '409':
          description: Conflict
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Movie/SearchMovieByTitle:
    post:
      tags:
        - Movie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchMovieByTitleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SearchMovieByTitleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SearchMovieByTitleRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchMovieByTitleResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchMovieByTitleResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchMovieByTitleResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Movie/GetMovieMetaInfo:
    get:
      tags:
        - Movie
      parameters:
        - name: movieId
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetMovieResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetMovieResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetMovieResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Review/CreateReview:
    post:
      tags:
        - Review
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReviewRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateReviewRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateReviewRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Review/GetAllReviews:
    post:
      tags:
        - Review
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllReviewsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GetAllReviewsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetAllReviewsRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Review/GetRecentReviews:
    post:
      tags:
        - Review
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRecentReviewsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GetRecentReviewsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetRecentReviewsRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetRecentReviewsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecentReviewsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetRecentReviewsResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/GetAllUsers:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileResponse'
  /api/User/SearchUser:
    get:
      tags:
        - User
      parameters:
        - name: partialString
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileResponse'
  /api/User/GetUser:
    get:
      tags:
        - User
      parameters:
        - name: userName
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/ValidateUser:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LoginResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/CreateUser:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserProfileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserProfileRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateUserProfileResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserProfileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateUserProfileResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/UpdateUser:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/ChangePassword:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/FollowUser:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/FollowUserRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FollowUserRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/UnfollowUser:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnfollowUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UnfollowUserRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnfollowUserRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    CreateMovieRequest:
      required:
        - language
        - plotSummary
        - releaseDate
        - title
      type: object
      properties:
        title:
          type: string
        language:
          type: string
        releaseDate:
          type: string
          format: date-time
        plotSummary:
          maxLength: 200
          minLength: 3
          type: string
        genre:
          type: string
          nullable: true
        director:
          type: string
          nullable: true
        castAndCrew:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CreateMovieResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date-time
        plotSummary:
          type: string
          nullable: true
        genre:
          type: string
          nullable: true
        castAndCrew:
          type: array
          items:
            type: string
          nullable: true
        director:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties:
        type: object
        additionalProperties: false
    MovieSearchCriteria:
      type: object
      properties:
        maxItems:
          type: integer
          format: int32
      additionalProperties: false
    SearchMovieByTitleRequest:
      required:
        - searchString
      type: object
      properties:
        searchString:
          minLength: 3
          type: string
        criteria:
          $ref: '#/components/schemas/MovieSearchCriteria'
      additionalProperties: false
    SearchMovieByTitleResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date-time
        language:
          type: string
          nullable: true
        plotSummary:
          type: string
          nullable: true
        genre:
          type: string
          nullable: true
        rating:
          type: number
          format: double
        totalReviews:
          type: integer
          format: int32
        director:
          type: string
          nullable: true
        castAndCrew:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    GetMovieResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        plotSummary:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date-time
        genre:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        rating:
          type: number
          format: double
        countReviews:
          type: integer
          format: int64
        director:
          type: string
          nullable: true
      additionalProperties: false
    CreateReviewRequest:
      required:
        - description
        - movieId
        - title
      type: object
      properties:
        movieId:
          type: string
        title:
          type: string
        description:
          maxLength: 200
          type: string
        rating:
          type: number
          format: double
      additionalProperties: false
    GetAllReviewsRequest:
      required:
        - movieId
      type: object
      properties:
        movieId:
          type: string
      additionalProperties: false
    GetRecentReviewsRequest:
      type: object
      properties:
        numberOfItems:
          type: integer
          format: int32
      additionalProperties: false
    MovieInfoItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
      additionalProperties: false
    AuthorInfoItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        followers:
          type: integer
          format: int32
      additionalProperties: false
    RecentReviewItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        movie:
          $ref: '#/components/schemas/MovieInfoItem'
        title:
          type: string
          nullable: true
        rating:
          type: number
          format: double
        description:
          type: string
          nullable: true
        author:
          $ref: '#/components/schemas/AuthorInfoItem'
      additionalProperties: false
    GetRecentReviewsResponse:
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/RecentReviewItem'
          nullable: true
      additionalProperties: false
    UserProfileResponse:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
        bio:
          type: string
          nullable: true
        followers:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    LoginRequest:
      required:
        - passKey
        - userName
      type: object
      properties:
        userName:
          type: string
        passKey:
          type: string
      additionalProperties: false
    LoginResponse:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        isAuthenticated:
          type: boolean
        loginTime:
          type: string
          format: date-time
        displayName:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
      additionalProperties: false
    CreateUserProfileRequest:
      required:
        - passKey
        - userName
      type: object
      properties:
        userName:
          minLength: 6
          type: string
        passKey:
          minLength: 8
          type: string
        displayName:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
      additionalProperties: false
    CreateUserProfileResponse:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    UpdateUserProfileRequest:
      required:
        - bio
        - displayName
      type: object
      properties:
        displayName:
          maxLength: 30
          type: string
        bio:
          maxLength: 180
          type: string
      additionalProperties: false
    ChangePasswordRequest:
      required:
        - newPassword
        - oldPassword
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          minLength: 8
          type: string
      additionalProperties: false
    FollowUserRequest:
      required:
        - userToFollow
      type: object
      properties:
        userToFollow:
          type: string
      additionalProperties: false
    UnfollowUserRequest:
      required:
        - userToUnfollow
      type: object
      properties:
        userToUnfollow:
          type: string
      additionalProperties: false
