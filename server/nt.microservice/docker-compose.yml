version: '3.9'

services:

  # APPLICATION SERVICES

  # Gateway - Application API Gateway

  # Service
  nt.gateway.service:
    image: ${DOCKER_REGISTRY-}ntgateway
    # container_name: nt.gateway.service
    hostname: nt.gateway.service
    build:
      context: .
      dockerfile: infrastructure/nt.gateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      # volumes:
      #  - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      #  - ~/.aspnet/https:/root/.aspnet/https:ro
    networks:
      nt.common.network:
    depends_on:
      - "nt.authservice.service"
      - "nt.userservice.service" 

  nt.orchestrator.service:
    image: ${DOCKER_REGISTRY-}ntorchestrator
    hostname: nt.orchestrator.service
    build:
        context: .
        dockerfile: infrastructure/nt.saga.orchestrator/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    networks:
      nt.common.network:
    depends_on:
      - "nt.authservice.service"
      - "nt.userservice.service" 

  # Authentication Service : Responsible for handling Authentication
  
  # Service 
  nt.authservice.service:
    image: ${DOCKER_REGISTRY-}authserviceapi
    # container_name: nt.authservice.service
    hostname: nt.authservice.service
    build:
      context: .
      dockerfile: services/AuthService/AuthService.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    volumes:
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ~/.aspnet/https:/root/.aspnet/https:ro
    networks:
      nt.common.network:
      nt.authservice.network:
    depends_on:
      - "nt.authservice.db"
      #- "nt.authservice.log.db"

  # Load Balancer for AuthService
  nt.authservice.loadbalancer:
    image: nginx:latest
    volumes:
        # - ./services/AuthService/AuthService.LoadBalancer/nginx:/etc/nginx/nginx.conf:ro
        - ./services/AuthService/AuthService.LoadBalancer/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nt.authservice.service
    networks:
      - nt.common.network
      - nt.authservice.network


  # Database
  nt.authservice.db:
    image: postgres:14.1-alpine
    container_name: nt.authservice.db
    hostname: "nt.authservice.db"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Admin123
      - POSTGRES_DB=ntuserauth
    volumes:
      - nt.authservice.db.volume:/var/lib/postgresql/data
      - ./services/db/scripts:/docker-entrypoint-initdb.d
    networks:
      nt.authservice.network:

  ## Log Database for Authentication Service
  #nt.authservice.log.db:
  #  image: mongo:latest
  #  hostname : nt.authservice.log.db
  #  restart: always
  #  environment:
  #    MONGO_INITDB_ROOT_USERNAME: root
  #    MONGO_INITDB_ROOT_PASSWORD: admin123
  #  networks:
  #    nt.authservice.network:
  #  volumes:
  #    - nt.authservice.log.db.volume:/data/db

  # User Service : Responsible for User Management
  
  # Service 
  nt.userservice.service:
    image: ${DOCKER_REGISTRY-}userserviceapi
    container_name: nt.userservice.service
    hostname: nt.userservice.service
    build:
      context: .
      dockerfile: services/UserService/UserService.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    networks:
      nt.common.network:
      nt.userservice.network:
    depends_on:
        - "nt.common.rabbitmq"
        - "nt.userservice.db"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

    
  # Database
  nt.userservice.db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: nt.userservice.db
    hostname: nt.userservice.db
    networks:
        nt.common.network:
        nt.userservice.network:
    environment:
       ACCEPT_EULA: Y
       MSSQL_SA_PASSWORD: Admin123 


  # Aschronous Messaging Services

  # $ docker run -d --hostname demo-rabbit --name demo-rabbit -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password -p 15672:15672 rabbitmq:3-management

  # ntuser/pass
  # administrator/pass
  nt.common.rabbitmq:
    image: "rabbitmq:3.10.6-management-alpine"
    container_name: nt.common.rabbitmq
    hostname: "ntqueue"
    networks:
        nt.common.network:
        nt.userservice.network:
        nt.authservice.network:
    volumes:
      - type: bind
        source: ./services/transportservices/rabbitmq-enabled-plugins
        target: /etc/rabbitmq/enabled_plugins
      - type: bind
        source: ./services/transportservices/rabbitmq.config
        target: /etc/rabbitmq/rabbitmq.conf
      - type: bind
        source: ./services/transportservices/rabbitmq-defs.json
        target: /etc/rabbitmq/definitions.json
  # HELPER SERVICES

  # Portainer
  nt.common.portainer:
    image: portainer/portainer-ce
    container_name: nt.common.portainer
    restart: always
    hostname : nt.common.portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - nt.common.portainer.volume:/data


  # PgAdmin to manage Postgres
  nt.common.pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nt.common.pgadmin
    hostname: nt.common.pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=anu.viswan@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=Admin123
    networks:
      nt.common.network:
      nt.authservice.network:


  # Prometheus 
  nt.common.prometheus:
    image: prom/prometheus:latest
    hostname: nt.common.prometheus
    container_name: nt.common.prometheus
    volumes:
        - ./services/monitoringservices/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
          - '--config.file=/etc/prometheus/prometheus.yml'

  nt.common.grafana:
    image: grafana/grafana
    hostname: nt.common.grafana
    container_name: nt.common.grafana
    volumes:
      - ./grafana-data/data:/var/lib/grafana



  ## Mongo Express to manage MongoDb
  #nt.common.mongoexpress:
  #  image: mongo-express
  #  hostname: nt.common.mongoexpress
  #  container_name: nt.common.mongoexpress
  #  restart: always
  #  environment:
  #    ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #    ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
  #    ME_CONFIG_MONGODB_URL: mongodb://root:admin123@authServiceLog:27017/
  #  networks:
  #    nt.authservice.network:
  #    nt.common.network:


volumes:
  nt.authservice.db.volume:
    name: "nt.authservice.db.volume"
  nt.common.portainer.volume:
    name: "nt.common.portainer.volume"
  nt.authservice.log.db.volume:
    name: "nt.authservice.log.db.volume"

networks:
  nt.authservice.network:
   # driver: bridge
  nt.userservice.network:
   # driver: bridge
  nt.common.network:
   # driver: bridge
