version: '3.4'

services:

  # APPLICATION SERVICES
  webapplication1:
    image: ${DOCKER_REGISTRY-}webapplication1
    build:
      context: .
      dockerfile: infrastructure/WebApplication1/Dockerfile

  # Gateway Service
  nt.gateway:
    image: ${DOCKER_REGISTRY-}ntgateway
    hostname: nt.gateway
    build:
      context: .
      dockerfile: infrastructure/nt.gateway/Dockerfile
    networks:
      services_network:
    depends_on:
      - "authservice.api"
      - "userservice.api" # Authentication Service
  authservice.api:
    image: ${DOCKER_REGISTRY-}authserviceapi
    hostname: nt.authservice
    build:
      context: .
      dockerfile: services/AuthService/AuthService.Api/Dockerfile
    networks:
      pg_network:
      mongo_network:
      services_network:
    depends_on:
      - "authdb"
      - "authServiceLog"
      # User Management Service
  userservice.api:
    image: ${DOCKER_REGISTRY-}userserviceapi
    hostname: nt.userservice
    build:
      context: .
      dockerfile: services/UserService/UserService.Api/Dockerfile
    networks:
      services_network:
    depends_on:
      - "postgres_pgadmin"
      # DATABASE SERVICES

      # Database for Authentication Service
  authdb:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Admin123
      - POSTGRES_DB=ntuserauth
    ports:
      - '5432:5432'
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      pg_network:

        # Auth Service Log Db 
  authServiceLog:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin123
    networks:
      mongo_network:


    volumes:
      - authServiceLog_Data:/data/db

  # HELPER SERVICES

  # Portainer
  portainer:
    image: portainer/portainer-ce

  # PgAdmin to manage Postgres
  postgres_pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=anu.viswan@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=Admin123
    ports:
      - '5050:80'
    networks:
      pg_network:


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://root:admin123@authServiceLog:27017/
    networks:
      mongo_network:


volumes:
  auth_data:
    name: "vol_nt_auth_pg"
  portainer_data:
    name: "vol_nt_portainer"
  authServiceLog_Data:
    name: "vol_nt_auth_log_mongo"

networks:
  pg_network:
    driver: bridge
  mongo_network:
    driver: bridge
  services_network:
    driver: bridge
