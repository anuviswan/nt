version: '3.4'

services:

  # APPLICATION SERVICES

  # Gateway - Application API Gateway

  # Service
  nt.gateway.service:
    image: ${DOCKER_REGISTRY-}ntgateway
    hostname: nt.gateway.service
    build:
      context: .
      dockerfile: infrastructure/nt.gateway/Dockerfile
    networks:
      nt.common.network:
    depends_on:
      - "nt.authservice.service"
      - "nt.userservice.service" 


  # Authentication Service : Responsible for handling Authentication
  
  # Service 
  nt.authservice.service:
    image: ${DOCKER_REGISTRY-}authserviceapi
    hostname: nt.authservice.service
    build:
      context: .
      dockerfile: services/AuthService/AuthService.Api/Dockerfile
    networks:
      nt.common.network:
      nt.authservice.network:
    depends_on:
      - "nt.authservice.db"
      - "nt.authservice.log.db"

  # Database
  nt.authservice.db:
    image: postgres:14.1-alpine
    hostname: "nt.authservice.db"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Admin123
      - POSTGRES_DB=ntuserauth
    ports:
      - '5432:5432'
    volumes:
      - nt.authservice.db.volume:/var/lib/postgresql/data
    networks:
      nt.authservice.network:

  # Log Database for Authentication Service
  nt.authservice.log.db:
    image: mongo:latest
    hostname : nt.authservice.log.db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin123
    networks:
      nt.authservice.network:
    volumes:
      - nt.authservice.log.db.volume:/data/db

  # User Service : Responsible for User Management
  
  # Service 
  nt.userservice.service:
    image: ${DOCKER_REGISTRY-}userserviceapi
    hostname: nt.userservice.service
    build:
      context: .
      dockerfile: services/UserService/UserService.Api/Dockerfile
    networks:
      nt.common.network:
      nt.userservice.network:
    
  # Database
  nt.userservice.db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    hostname: nt.userservice.db
    environment:
       ACCEPT_EULA: Y
       SA_PASSWORD: Admin123 
    networks:
        nt.common.network:
        nt.userservice.network:
    ports:
        - 1433:1433  


  # Aschronous Messaging Services

  # $ docker run -d --hostname demo-rabbit --name demo-rabbit -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password -p 15672:15672 rabbitmq:3-management

  nt.common.rabbitmq:
    image: "rabbitmq:3.10.6-management-alpine"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - type: bind
        source: ./services/transportservices/rabbitmq-enabled-plugins
        target: /etc/rabbitmq/enabled_plugins

# rabbitmq.conf : to be used if using the new INI format
# rabbitmq.config to be used when using the old ERLANG format      
      - type: bind
        source: ./services/transportservices/rabbitmq.config
        target: /etc/rabbitmq/rabbitmq.conf
      - type: bind
        source: ./services/transportservices/rabbitmq-defs.json
        target: /etc/rabbitmq/definitions.json
  # HELPER SERVICES

  # Portainer
  nt.common.portainer:
    image: portainer/portainer-ce
    hostname : nt.common.portainer

  # PgAdmin to manage Postgres
  nt.common.pgadmin:
    image: dpage/pgadmin4:latest
    hostname: nt.common.pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=anu.viswan@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=Admin123
    ports:
      - '5050:80'
    networks:
      nt.common.network:
      nt.authservice.network:

  # Mongo Express to manage MongoDb
  nt.common.mongoexpress:
    image: mongo-express
    hostname: nt.common.mongoexpress
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://root:admin123@authServiceLog:27017/
    networks:
      nt.authservice.network:
      nt.common.network:



volumes:
  nt.authservice.db.volume:
    name: "nt.authservice.db.volume"
  nt.common.portainer.volume:
    name: "nt.common.portainer.volume"
  nt.authservice.log.db.volume:
    name: "nt.authservice.log.db.volume"

networks:
  nt.authservice.network:
    driver: bridge
  nt.userservice.network:
    driver: bridge
  nt.common.network:
    driver: bridge
